(define (read-input file)
  (with-input-from-file file
    (lambda ()
      (let loop ((numbers '()))
        (let ((line (read-line)))
          (if (eof-object? line)
              (reverse numbers)
              (loop (cons (string->number line) numbers))))))))

(define (find-three-sum numbers target)
  (let loop ((nums numbers) (seen '()))
    (if (null? nums)
        '()
        (let ((current (car nums)))
          (let ((needed (- target current)))
            (for-each (lambda (x)
                        (for-each (lambda (y)
                                    (when (= (+ current x y) target)
                                      (display (* current x y))
                                      (newline)))
                                  seen))
                      (cdr nums))
            (loop (cdr nums) (cons current seen)))))))

(define (main)
  (let ((numbers (read-input "input.txt")))
    (find-three-sum numbers 2020)))

(main)