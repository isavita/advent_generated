Based on the given output, it seems that Part 1 was solved correctly (937 viable pairs), but Part 2 is likely incorrect. The issue in Part 2 is probably related to the path-finding algorithm or the way we're counting steps. 

For Part 2, we need to implement a more sophisticated algorithm that simulates moving the data around the grid. The current solution might be using a simplistic approach that doesn't account for all the necessary moves or the constraints of the problem.

To fix this, we should:
1. Implement a proper representation of the grid
2. Identify the empty node and the node with the goal data
3. Use a pathfinding algorithm (like A* or BFS) to find the shortest path to move the empty node next to the goal data
4. Count the steps needed to move the empty node to the position just left of the goal data
5. Add the steps needed to move the goal data to the starting position (which is typically the width of the grid minus 1)

Let's implement a solution that addresses these points.