To solve this problem efficiently, we can follow these steps:
1. Parse the input file to separate workflows and parts.
2. Create a dictionary to store workflows, with each workflow containing its rules.
3. Implement a function to process a part through the workflows.
4. Iterate through all parts, process each one, and sum the ratings of accepted parts.

For parsing the workflows, we'll use regular expressions to extract the workflow name and rules. For each part, we'll create a dictionary of its ratings.

To process a part through workflows, we'll start with the 'in' workflow and follow the rules until we reach an 'A' (accept) or 'R' (reject) decision.

This approach should be efficient as it processes each part only once and uses dictionary lookups for quick access to workflows and ratings.