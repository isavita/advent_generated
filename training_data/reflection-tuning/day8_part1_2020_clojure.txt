To solve this problem, we need to:
1. Read and parse the input file, converting each line into a tuple of operation and argument.
2. Simulate the execution of the instructions, keeping track of the accumulator value and visited instructions.
3. Stop the execution when we're about to visit an instruction for the second time.
4. Return the accumulator value at that point.

We'll use a vector to store the instructions and a set to keep track of visited instruction indices. We'll also use a loop-recur construct to simulate the execution efficiently.