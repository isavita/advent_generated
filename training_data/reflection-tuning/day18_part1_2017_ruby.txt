To solve this problem, we need to:
1. Read and parse the instructions from the input file.
2. Implement a function to execute each instruction type.
3. Keep track of the registers and the last played sound.
4. Execute instructions sequentially, handling jumps appropriately.
5. Stop when we encounter a 'rcv' instruction with a non-zero value and return the last played sound.

We'll use a hash to store register values, defaulting to 0 for uninitialized registers. We'll also use a method to get the value of an operand, which could be either a register or a number.