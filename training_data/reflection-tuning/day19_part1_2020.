const fs = require('fs');

function solveMonsterMessages(input) {
    const [rulesSection, messagesSection] = input.split('\n\n');
    const rules = new Map();
    const messages = messagesSection.split('\n');

    // Parse rules
    rulesSection.split('\n').forEach(rule => {
        const [id, content] = rule.split(': ');
        rules.set(id, content.replace(/"/g, ''));
    });

    // Build regex for rule 0
    const regex = new RegExp(`^${buildRegex('0', rules)}$`);

    // Count matching messages
    const matchingMessages = messages.filter(msg => regex.test(msg)).length;

    return matchingMessages;
}

function buildRegex(ruleId, rules) {
    const rule = rules.get(ruleId);
    if (/^[ab]$/.test(rule)) return rule;

    const subRules = rule.split(' | ');
    const regexParts = subRules.map(subRule => 
        subRule.split(' ').map(id => buildRegex(id, rules)).join('')
    );

    return `(${regexParts.join('|')})`;
}

// Read input from file and solve
const input = fs.readFileSync('input.txt', 'utf8');
console.log(solveMonsterMessages(input));
