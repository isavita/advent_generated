To solve this problem efficiently in Clojure, we'll follow these steps:
1. Read the input file line by line.
2. Define two functions: one for checking if a string is nice according to Part 1 rules, and another for Part 2 rules.
3. Use regular expressions and Clojure's string functions to implement the rules efficiently.
4. Count the number of nice strings for both parts using the filter function.
5. Print the results.

For Part 1:
- Use a regex to count vowels
- Use a regex to check for double letters
- Use a regex to check for forbidden substrings

For Part 2:
- Use a regex to check for repeating pairs
- Use a regex to check for repeating letters with one letter between

We'll use Clojure's built-in functions like re-seq, re-find, and filter to keep the code concise and efficient.