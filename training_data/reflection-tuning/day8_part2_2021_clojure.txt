To solve this problem efficiently in Clojure, we can follow these steps:
1. Read and parse the input file, splitting each line into patterns and output values.
2. For Part 1, we can simply count the occurrences of digits with unique segment counts (2, 3, 4, 7).
3. For Part 2, we need to:
   a. Deduce the mapping of scrambled segments to actual digits.
   b. Use this mapping to decode the output values.
   c. Sum up all decoded output values.

We'll use set operations to efficiently compare and deduce digit patterns. We'll also use a map to store the deduced digit patterns for quick lookup when decoding the output values.