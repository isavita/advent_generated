const fs = require('fs');

function solve(input, moves, isPart2) {
    let cups = input.split('').map(Number);
    const max = Math.max(...cups);
    const size = isPart2 ? 1000000 : cups.length;

    // Initialize the linked list
    const next = new Array(size + 1);
    for (let i = 0; i < cups.length; i++) {
        next[cups[i]] = cups[(i + 1) % cups.length];
    }
    if (isPart2) {
        next[cups[cups.length - 1]] = max + 1;
        for (let i = max + 1; i < size; i++) {
            next[i] = i + 1;
        }
        next[size] = cups[0];
    }

    let current = cups[0];

    for (let move = 0; move < moves; move++) {
        // Pick up three cups
        const pickup = [next[current], next[next[current]], next[next[next[current]]]];
        next[current] = next[pickup[2]];

        // Find destination
        let destination = current - 1 || size;
        while (pickup.includes(destination)) {
            destination = destination - 1 || size;
        }

        // Place picked up cups
        next[pickup[2]] = next[destination];
        next[destination] = pickup[0];

        // Move to next cup
        current = next[current];
    }

    if (!isPart2) {
        let result = '';
        let cup = next[1];
        while (cup !== 1) {
            result += cup;
            cup = next[cup];
        }
        return result;
    } else {
        return BigInt(next[1]) * BigInt(next[next[1]]);
    }
}

const input = fs.readFileSync('input.txt', 'utf8').trim();

console.log("Part 1:", solve(input, 100, false));
console.log("Part 2:", solve(input, 10000000, true));
