The timeout error suggests that the previous solution was likely inefficient, probably due to processing each seed individually through all the mappings. For large ranges of seeds, this approach would be extremely time-consuming. 

To optimize this, we can work with ranges instead of individual seeds. We can process entire ranges of seeds through the mappings, splitting and merging ranges as necessary. This approach will significantly reduce the number of operations needed, especially for large input ranges.

Key optimizations:
1. Process seed ranges instead of individual seeds.
2. Apply each mapping to the entire range at once, splitting ranges when they cross mapping boundaries.
3. Merge overlapping ranges after each mapping step to keep the number of ranges manageable.

This range-based approach should dramatically improve performance, especially for part two of the problem where we're dealing with potentially millions of seeds.