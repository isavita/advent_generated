const fs = require('fs');

function solve(input) {
    let grid = input.split('\n').map(row => row.split('').map(c => c === '#' ? 1 : 0));
    const rows = grid.length;
    const cols = grid[0].length;
    let newGrid = Array(rows).fill().map(() => Array(cols).fill(0));

    function countNeighbors(r, c) {
        let count = 0;
        for (let i = -1; i <= 1; i++) {
            for (let j = -1; j <= 1; j++) {
                if (i === 0 && j === 0) continue;
                const nr = r + i, nc = c + j;
                if (nr >= 0 && nr < rows && nc >= 0 && nc < cols) {
                    count += grid[nr][nc];
                }
            }
        }
        return count;
    }

    function step() {
        for (let r = 0; r < rows; r++) {
            for (let c = 0; c < cols; c++) {
                const neighbors = countNeighbors(r, c);
                if (grid[r][c]) {
                    newGrid[r][c] = (neighbors === 2 || neighbors === 3) ? 1 : 0;
                } else {
                    newGrid[r][c] = (neighbors === 3) ? 1 : 0;
                }
            }
        }
        [grid, newGrid] = [newGrid, grid];
    }

    for (let i = 0; i < 100; i++) {
        step();
    }

    return grid.flat().reduce((sum, light) => sum + light, 0);
}

const input = fs.readFileSync('input.txt', 'utf8').trim();
console.log(solve(input));
