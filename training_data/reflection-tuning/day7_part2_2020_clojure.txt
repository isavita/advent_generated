To solve this problem, we need to approach it in two parts:

1. For Part One:
   - Parse the input to create a graph of bag relationships.
   - Implement a depth-first search to find all bags that can eventually contain a shiny gold bag.
   - Count the number of unique bag colors that can contain a shiny gold bag.

2. For Part Two:
   - Use the same graph structure from Part One.
   - Implement a recursive function to count the total number of bags inside a shiny gold bag.
   - This function will sum the number of bags directly contained plus the number of bags contained within each of those bags.

We'll use Clojure's built-in functions for file reading, string manipulation, and recursion to create an efficient solution.