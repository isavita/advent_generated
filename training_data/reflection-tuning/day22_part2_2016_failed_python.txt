Based on the given output, it seems that Part 1 was solved correctly (937 viable pairs), but Part 2 is likely incorrect. The issue with Part 2 is probably related to the algorithm used to calculate the minimum number of steps to move the goal data.

The current solution might be using a simple approach that doesn't account for the complexities of the grid and the constraints of moving data. A more effective solution would likely involve:

1. Parsing the input to create a 2D grid representation of the nodes.
2. Identifying the 'goal' node (top-right corner) and the 'empty' node.
3. Using a pathfinding algorithm (like A* or BFS) to find the shortest path from the empty node to the position adjacent to the goal node.
4. Calculating the number of steps needed to move the empty node around the goal node to the top-left corner.
5. Adding the number of steps to move the goal data to the final position.

Let's implement this improved approach.