
let calculate_new_fuel current_position new_position =
  let diff = abs (current_position - new_position) in
  (diff * (diff + 1)) / 2

let abs n = if n < 0 then -n else n

let () =
  let file = open_in "input.txt" in
  let positions = ref [] in
  try
    while true do
      let line = input_line file in
      let numbers = String.split_on_char ',' line in
      List.iter (fun num_str ->
        let num = int_of_string num_str in
        positions := num :: !positions
      ) numbers
    done
  with End_of_file ->
    close_in file;
    let positions_sorted = List.sort compare !positions in
    let min_fuel = ref max_int in
    for i = List.hd positions_sorted to List.hd (List.rev positions_sorted) do
      let fuel = ref 0 in
      List.iter (fun pos ->
        fuel := !fuel + calculate_new_fuel pos i
      ) positions_sorted;
      if !fuel < !min_fuel then min_fuel := !fuel
    done;
    print_int !min_fuel;
    print_newline ()
