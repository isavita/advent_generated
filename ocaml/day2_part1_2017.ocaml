
(* Function to find the difference between the largest and smallest values in a list *)
let diff_max_min (nums : int list) : int =
  match List.sort compare nums with
  | [] -> 0  (* Handle empty list case *)
  | h :: t -> (List.hd (List.rev (h::t))) - h

(* Function to process a single line: convert it to a list of ints and calculate the difference *)
let process_line (line : string) : int =
  let nums = String.split_on_char '\t' line |> List.map int_of_string_opt |> List.filter_map (fun x -> x) in
    diff_max_min nums

(* Function to calculate the checksum of the entire spreadsheet *)
let calculate_checksum (lines : string list) : int =
  List.fold_left (fun acc line -> acc + process_line line) 0 lines

(* Main function *)
let () =
  (* Read lines from file, handling potential exceptions *)
  let lines =
    try
      let ic = open_in "input.txt" in
      let rec read_lines acc =
        try
          let line = input_line ic in
          read_lines (line :: acc)
        with End_of_file ->
          close_in ic;
          List.rev acc
      in
      read_lines []
    with Sys_error msg ->
      Printf.eprintf "Error reading file: %s\n" msg;
      exit 1
  in

  (* Calculate and print the checksum *)
  let checksum = calculate_checksum lines in
  Printf.printf "%d\n" checksum
