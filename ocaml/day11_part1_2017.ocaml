
let abs x = if x < 0 then -x else x

let max a b = if a > b then a else b

let distance x y z = (abs x + abs y + abs z) / 2

let () =
  let input = 
    let ic = open_in "input.txt" in
    let line = input_line ic in
    close_in ic;
    line
  in
  let directions = String.split_on_char ',' input in
  let x, y, z, max_distance = 
    List.fold_left (fun (x, y, z, max_dist) dir ->
      let x', y', z' = 
        match dir with
        | "n"  -> (x, y + 1, z - 1)
        | "ne" -> (x + 1, y, z - 1)
        | "se" -> (x + 1, y - 1, z)
        | "s"  -> (x, y - 1, z + 1)
        | "sw" -> (x - 1, y, z + 1)
        | "nw" -> (x - 1, y + 1, z)
        | _    -> (x, y, z)
      in
      let cur_distance = distance x' y' z' in
      (x', y', z', max max_dist cur_distance)
    ) (0, 0, 0, 0) directions
  in
  Printf.printf "%d\n" (distance x y z)
