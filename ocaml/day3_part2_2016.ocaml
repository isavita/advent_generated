
let is_valid_triangle a b c = a + b > c && a + c > b && b + c > a

let () =
  let ic = open_in "input.txt" in
  let lines =
    let rec loop acc =
      try
        let line = input_line ic in
        loop (line :: acc)
      with End_of_file ->
        close_in ic;
        List.rev acc
    in
    loop []
  in
  let numbers =
    List.map
      (fun line ->
        String.split_on_char ' ' line
        |> List.filter (fun s -> s <> "")
        |> List.map int_of_string)
      lines
  in
  let cols = List.length (List.hd numbers) in
  let rows = List.length numbers in
  let valid_triangles = ref 0 in
  for i = 0 to cols - 1 do
    for j = 0 to rows / 3 - 1 do
      let a = List.nth (List.nth numbers (j * 3)) i in
      let b = List.nth (List.nth numbers (j * 3 + 1)) i in
      let c = List.nth (List.nth numbers (j * 3 + 2)) i in
      if is_valid_triangle a b c then incr valid_triangles
    done
  done;
  print_int !valid_triangles;
  print_newline ()
