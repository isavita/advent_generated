
let digits = [| "zero"; "one"; "two"; "three"; "four"; "five"; "six"; "seven"; "eight"; "nine" |]

let find_first_and_last_digit line =
  let n = String.length line in
  let rec find_first first last i =
    if i >= n then (first, last)
    else
      let c = line.[i] in
      if c >= '0' && c <= '9' then
        let digit = int_of_char c - int_of_char '0' in
        if first = -1 then find_first digit digit (i + 1)
        else find_first first digit (i + 1)
      else
        let rec check_prefix j =
          if j >= Array.length digits then find_first first last (i + 1)
          else if String.starts_with ~prefix:digits.(j) (String.sub line i (n - i)) then
            if first = -1 then find_first j j (i + 1)
            else find_first first j (i + 1)
          else check_prefix (j + 1)
        in
        check_prefix 0
  in
  find_first (-1) (-1) 0

let solve () =
  let ic = open_in "input.txt" in
  let rec read_lines sum =
    try
      let line = input_line ic in
      let first, last = find_first_and_last_digit line in
      read_lines (sum + 10 * first + last)
    with End_of_file ->
      close_in ic;
      sum
  in
  let result = read_lines 0 in
  Printf.printf "%d\n" result

let () = solve ()
