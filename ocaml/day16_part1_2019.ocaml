
let apply_fft input =
  let base_pattern = [|0; 1; 0; -1|] in
  let output = Array.make (Array.length input) 0 in
  let abs x = if x < 0 then -x else x in
  for i = 0 to Array.length input - 1 do
    let sum = ref 0 in
    for j = 0 to Array.length input - 1 do
      let pattern_value = base_pattern.((j + 1) / (i + 1) mod Array.length base_pattern) in
      sum := !sum + input.(j) * pattern_value
    done;
    output.(i) <- abs !sum mod 10
  done;
  output

let () =
  let input = ref "" in
  let ic = open_in "input.txt" in
  try
    while true do
      input := !input ^ input_line ic
    done
  with End_of_file ->
    close_in ic;
    let digits = Array.init (String.length !input) (fun i -> int_of_string (String.sub !input i 1)) in
    let digits_ref = ref digits in
    for _ = 0 to 99 do
      digits_ref := apply_fft !digits_ref
    done;
    for i = 0 to 7 do
      print_int !digits_ref.(i)
    done;
    print_newline ()
