
       IDENTIFICATION DIVISION.
       PROGRAM-ID. ENHANCER.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INPUT-FILE ASSIGN TO 'input.txt'.

       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE.
       01 INPUT-RECORD.
           05 FILLER PIC X(80).

       WORKING-STORAGE SECTION.
       01 GRID-DATA.
           05 GRID-ROWS OCCURS 100 TIMES DEPENDING ON GRID-SIZE.
               10 GRID-CELLS PIC X OCCURS 100 TIMES DEPENDING ON GRID-SIZE.

       01 RULES-DATA.
           05 RULES-ENTRIES OCCURS 100 TIMES.
               10 RULE-INPUT  PIC X(20).
               10 RULE-OUTPUT PIC X(20).

       01 RULE-COUNT PIC 99.
       01 GRID-SIZE PIC 99.
       01 ITERATION PIC 99.
       01 SUB-SIZE PIC 99.
       01 NEW-SIZE PIC 99.
       01 PIXEL-COUNT PIC 999.

       01 TEMP-STRING PIC X(20).
       01 TEMP-STRING-LEN PIC 99.
       01 TEMP-CHAR PIC X.

       01 CURRENT-ROW-INDEX PIC 99.
       01 CURRENT-COL-INDEX PIC 99.
       01 SQUARE-ROW-INDEX PIC 99.
       01 SQUARE-COL-INDEX PIC 99.
       01 NEW-GRID-ROW-INDEX PIC 99.
       01 NEW-GRID-COL-INDEX PIC 99.

       01 ENHANCED-SQUARE PIC X(20).
       01 ENHANCED-SQUARE-LEN PIC 99.
       01 ENHANCED-SQUARE-ROW-INDEX PIC 99.

       PROCEDURE DIVISION.
       MAIN-PROCEDURE.
           PERFORM INITIALIZE-RULES.
           PERFORM INITIALIZE-GRID.

           PERFORM VARYING ITERATION FROM 1 BY 1 UNTIL ITERATION > 5
               PERFORM ENHANCE-GRID
           END-PERFORM.

           PERFORM COUNT-PIXELS.
           DISPLAY PIXEL-COUNT.
           STOP RUN.

       INITIALIZE-RULES.
           OPEN INPUT INPUT-FILE.
           MOVE 0 TO RULE-COUNT.
           PERFORM READ-RULE UNTIL END-OF-INPUT.
           CLOSE INPUT-FILE.
           EXIT.

       READ-RULE.
           READ INPUT-FILE INTO INPUT-RECORD.
           IF NOT END-OF-INPUT
               ADD 1 TO RULE-COUNT
               MOVE FUNCTION SUBSTRING(INPUT-RECORD FROM 1 FOR 20) TO RULE-INPUT(RULE-COUNT)
               MOVE FUNCTION SUBSTRING(INPUT-RECORD FROM 25 FOR 20) TO RULE-OUTPUT(RULE-COUNT)
           END-IF.
           EXIT.

       INITIALIZE-GRID.
           MOVE 3 TO GRID-SIZE.
           SET GRID-ROWS(1) TO ".#.".
           SET GRID-ROWS(2) TO "..#".
           SET GRID-ROWS(3) TO "###".
           EXIT.

       ENHANCE-GRID.
           IF FUNCTION MOD(GRID-SIZE, 2) = 0
               MOVE 2 TO SUB-SIZE
               COMPUTE NEW-SIZE = (GRID-SIZE / 2) * 3
           ELSE
               MOVE 3 TO SUB-SIZE
               COMPUTE NEW-SIZE = (GRID-SIZE / 3) * 4
           END-IF.

           PERFORM CLEAR-NEW-GRID.

           PERFORM VARYING CURRENT-ROW-INDEX FROM 0 BY SUB-SIZE UNTIL CURRENT-ROW-INDEX >= GRID-SIZE
               PERFORM VARYING CURRENT-COL-INDEX FROM 0 BY SUB-SIZE UNTIL CURRENT-COL-INDEX >= GRID-SIZE
                   PERFORM EXTRACT-SQUARE
                   PERFORM ENHANCE-SQUARE
                   PERFORM PLACE-ENHANCED-SQUARE
               END-PERFORM
           END-PERFORM.

           MOVE NEW-SIZE TO GRID-SIZE.
           EXIT.

       CLEAR-NEW-GRID.
           PERFORM VARYING SQUARE-ROW-INDEX FROM 1 BY 1 UNTIL SQUARE-ROW-INDEX > NEW-SIZE
               MOVE SPACES TO GRID-ROWS(SQUARE-ROW-INDEX)
           END-PERFORM.
           EXIT.

       EXTRACT-SQUARE.
           MOVE SPACES TO TEMP-STRING.
           PERFORM VARYING SQUARE-ROW-INDEX FROM 0 BY 1 UNTIL SQUARE-ROW-INDEX >= SUB-SIZE
               MOVE FUNCTION SUBSTRING(GRID-ROWS(CURRENT-ROW-INDEX + SQUARE-ROW-INDEX + 1) FROM CURRENT-COL-INDEX + 1 FOR SUB-SIZE) TO TEMP-STRING
               IF SQUARE-ROW-INDEX > 0
                   STRING "/" DELIMITED BY SIZE INTO TEMP-STRING
               END-IF
               STRING TEMP-STRING DELIMITED BY SIZE INTO TEMP-STRING
           END-PERFORM.
           EXIT.

       ENHANCE-SQUARE.
           MOVE TEMP-STRING TO ENHANCED-SQUARE.
           PERFORM TRY-ENHANCE-WITH-ROTATIONS.
           IF ENHANCED-SQUARE = SPACES
               PERFORM FLIP-SQUARE
               PERFORM TRY-ENHANCE-WITH-ROTATIONS
           END-IF.
           EXIT.

       TRY-ENHANCE-WITH-ROTATIONS.
           PERFORM VARYING ITERATION FROM 1 BY 1 UNTIL ITERATION > 4
               PERFORM CHECK-RULE
               IF ENHANCED-SQUARE NOT = SPACES
                   EXIT PERFORM
               END-IF
               PERFORM ROTATE-SQUARE
           END-PERFORM.
           EXIT.

       CHECK-RULE.
           PERFORM VARYING RULE-COUNT FROM 1 BY 1 UNTIL RULE-COUNT > 100
               IF ENHANCED-SQUARE = RULE-INPUT(RULE-COUNT)
                   MOVE RULE-OUTPUT(RULE-COUNT) TO ENHANCED-SQUARE
                   EXIT PERFORM
               END-IF
           END-PERFORM.
           EXIT.

       ROTATE-SQUARE.
           MOVE SPACES TO TEMP-STRING.
           MOVE SUB-SIZE TO TEMP-STRING-LEN.
           PERFORM VARYING SQUARE-COL-INDEX FROM SUB-SIZE - 1 BY -1 UNTIL SQUARE-COL-INDEX < 0
               PERFORM VARYING SQUARE-ROW-INDEX FROM 0 BY 1 UNTIL SQUARE-ROW-INDEX >= SUB-SIZE
                   MOVE FUNCTION SUBSTRING(ENHANCED-SQUARE FROM (SQUARE-ROW-INDEX * SUB-SIZE) + SQUARE-COL-INDEX + 1 FOR 1) TO TEMP-CHAR
                   STRING TEMP-CHAR DELIMITED BY SIZE INTO TEMP-STRING
               END-PERFORM
               IF SQUARE-COL-INDEX > 0
                   STRING "/" DELIMITED BY SIZE INTO TEMP-STRING
               END-IF
           END-PERFORM.
           MOVE TEMP-STRING TO ENHANCED-SQUARE.
           EXIT.

       FLIP-SQUARE.
           MOVE SPACES TO TEMP-STRING.
           PERFORM VARYING SQUARE-ROW-INDEX FROM 0 BY 1 UNTIL SQUARE-ROW-INDEX >= SUB-SIZE
               MOVE FUNCTION SUBSTRING(ENHANCED-SQUARE FROM (SQUARE-ROW-INDEX * SUB-SIZE) + 1 FOR SUB-SIZE) TO TEMP-STRING
               MOVE FUNCTION REVERSE(TEMP-STRING) TO TEMP-STRING
               IF SQUARE-ROW-INDEX > 0
                   STRING "/" DELIMITED BY SIZE INTO TEMP-STRING
               END-IF
               STRING TEMP-STRING DELIMITED BY SIZE INTO TEMP-STRING
           END-PERFORM.
           MOVE TEMP-STRING TO ENHANCED-SQUARE.
           EXIT.

       PLACE-ENHANCED-SQUARE.
           MOVE 0 TO ENHANCED-SQUARE-ROW-INDEX.
           MOVE 0 TO ENHANCED-SQUARE-LEN.
           PERFORM VARYING SQUARE-ROW-INDEX FROM 1 BY 1 UNTIL SQUARE-ROW-INDEX > SUB-SIZE
               MOVE FUNCTION LENGTH(FUNCTION SUBSTRING(ENHANCED-SQUARE FROM ENHANCED-SQUARE-ROW-INDEX + 1 FOR SUB-SIZE)) TO TEMP-STRING-LEN
               ADD TEMP-STRING-LEN TO ENHANCED-SQUARE-ROW-INDEX
               MOVE FUNCTION SUBSTRING(ENHANCED-SQUARE FROM ENHANCED-SQUARE-ROW-INDEX - TEMP-STRING-LEN + 1 FOR TEMP-STRING-LEN) TO TEMP-STRING
               COMPUTE NEW-GRID-ROW-INDEX = (CURRENT-ROW-INDEX / SUB-SIZE) * (SUB-SIZE + 1) + SQUARE-ROW-INDEX
               STRING GRID-ROWS(NEW-GRID-ROW-INDEX) TEMP-STRING DELIMITED BY SIZE INTO GRID-ROWS(NEW-GRID-ROW-INDEX)
           END-PERFORM.
           EXIT.

       COUNT-PIXELS.
           MOVE 0 TO PIXEL-COUNT.
           PERFORM VARYING CURRENT-ROW-INDEX FROM 1 BY 1 UNTIL CURRENT-ROW-INDEX > GRID-SIZE
               PERFORM VARYING CURRENT-COL-INDEX FROM 1 BY 1 UNTIL CURRENT-COL-INDEX > GRID-SIZE
                   IF GRID-CELLS(CURRENT-ROW-INDEX, CURRENT-COL-INDEX) = '#'
                       ADD 1 TO PIXEL-COUNT
                   END-IF
               END-PERFORM
           END-PERFORM.
           EXIT.

       END-OF-INPUT.
           EXIT.
