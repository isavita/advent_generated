
       IDENTIFICATION DIVISION.
       PROGRAM-ID. TRAVELING-SALESMAN.
       AUTHOR. EXPERT PROGRAMMER.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INPUT-FILE ASSIGN TO 'input.txt'.

       DATA DIVISION.
       FILE SECTION.
       FD INPUT-FILE.
       01 INPUT-RECORD.
           05 FROM-LOCATION-NAME   PIC X(50).
           05 FILLER               PIC X(5).
           05 TO-LOCATION-NAME     PIC X(50).
           05 FILLER               PIC X(3).
           05 DISTANCE-STR         PIC X(10).

       WORKING-STORAGE SECTION.
       01 LOCATION-TABLE.
          05 LOCATION-ENTRY OCCURS 100 TIMES.
             10 LOCATION-NAME PIC X(50).
             10 LOCATION-INDEX PIC 9(4).

       01 DISTANCE-MATRIX.
          05 DISTANCE-ROW OCCURS 100 TIMES.
             10 DISTANCE-COL OCCURS 100 TIMES PIC 9(9) VALUE 0.

       01 LOCATION-COUNT PIC 9(4) VALUE 0.
       01 CURRENT-LINE   PIC X(100).
       01 CURRENT-DISTANCE PIC 9(9).

       01 ROUTE-ARRAY OCCURS 100 TIMES PIC 9(4).
       01 MIN-DISTANCE PIC 9(9) VALUE 999999999.
       01 CURRENT-DISTANCE-CALC PIC 9(9).

       01 I PIC 9(4).
       01 J PIC 9(4).
       01 K PIC 9(4).
       01 TEMP-INDEX PIC 9(4).
       01 TEMP-DISTANCE PIC 9(9).

       01 SUB-STRING-POS PIC 9(4).
       01 SUB-STRING-LEN PIC 9(4).

       PROCEDURE DIVISION.
       MAIN-PROCEDURE.
           PERFORM INITIALIZE-DATA.
           PERFORM READ-AND-PARSE-INPUT.
           PERFORM FIND-SHORTEST-ROUTE.
           DISPLAY MIN-DISTANCE.
           STOP RUN.

       INITIALIZE-DATA.
           MOVE 0 TO LOCATION-COUNT.
           MOVE 999999999 TO MIN-DISTANCE.
           CLOSE INPUT-FILE.
           OPEN INPUT INPUT-FILE.

       READ-AND-PARSE-INPUT.
           PERFORM UNTIL EOF
               READ INPUT-FILE INTO CURRENT-LINE
               IF NOT EOF
                   PERFORM PARSE-LINE
               END-IF
           END-PERFORM.
           CLOSE INPUT-FILE.

       PARSE-LINE.
           MOVE SPACES TO FROM-LOCATION-NAME, TO-LOCATION-NAME, DISTANCE-STR.
           MOVE 1 TO SUB-STRING-POS.
           PERFORM VARYING SUB-STRING-LEN FROM 1 BY 1 UNTIL CURRENT-LINE(SUB-STRING-POS:1) = SPACE
               MOVE CURRENT-LINE(SUB-STRING-POS:SUB-STRING-LEN) TO FROM-LOCATION-NAME(1:SUB-STRING-LEN)
           END-PERFORM.
           ADD 1 TO SUB-STRING-POS.
           ADD 5 TO SUB-STRING-POS.

           MOVE SPACES TO TO-LOCATION-NAME.
           PERFORM VARYING SUB-STRING-LEN FROM 1 BY 1 UNTIL CURRENT-LINE(SUB-STRING-POS:1) = SPACE
               MOVE CURRENT-LINE(SUB-STRING-POS:SUB-STRING-LEN) TO TO-LOCATION-NAME(1:SUB-STRING-LEN)
           END-PERFORM.
           ADD 1 TO SUB-STRING-POS.
           ADD 3 TO SUB-STRING-POS.

           MOVE CURRENT-LINE(SUB-STRING-POS:10) TO DISTANCE-STR.
           MOVE DISTANCE-STR TO CURRENT-DISTANCE.

           PERFORM FIND-OR-ADD-LOCATION.
           PERFORM FIND-OR-ADD-LOCATION-TO.
           MOVE CURRENT-DISTANCE TO DISTANCE-COL(LOCATION-INDEX(FROM-LOCATION-NAME) : LOCATION-INDEX(TO-LOCATION-NAME)).
           MOVE CURRENT-DISTANCE TO DISTANCE-COL(LOCATION-INDEX(TO-LOCATION-NAME) : LOCATION-INDEX(FROM-LOCATION-NAME)).

       FIND-OR-ADD-LOCATION.
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > LOCATION-COUNT
               IF LOCATION-NAME(I) = FROM-LOCATION-NAME
                   MOVE I TO LOCATION-INDEX(FROM-LOCATION-NAME)
                   GO TO FOUND-LOCATION
               END-IF
           END-PERFORM.
           ADD 1 TO LOCATION-COUNT.
           MOVE LOCATION-NAME(LOCATION-COUNT) TO FROM-LOCATION-NAME.
           MOVE LOCATION-COUNT TO LOCATION-INDEX(FROM-LOCATION-NAME).
       FOUND-LOCATION.

       FIND-OR-ADD-LOCATION-TO.
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > LOCATION-COUNT
               IF LOCATION-NAME(I) = TO-LOCATION-NAME
                   MOVE I TO LOCATION-INDEX(TO-LOCATION-NAME)
                   GO TO FOUND-LOCATION-TO
               END-IF
           END-PERFORM.
           ADD 1 TO LOCATION-COUNT.
           MOVE LOCATION-NAME(LOCATION-COUNT) TO TO-LOCATION-NAME.
           MOVE LOCATION-COUNT TO LOCATION-INDEX(TO-LOCATION-NAME).
       FOUND-LOCATION-TO.

       FIND-SHORTEST-ROUTE.
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > LOCATION-COUNT
               MOVE I TO ROUTE-ARRAY(I)
           END-PERFORM.
           PERFORM PERMUTE-ROUTE 1.

       PERMUTE-ROUTE.
           PROCEDURE DIVISION USING I.
           IF I = LOCATION-COUNT
               PERFORM CALCULATE-ROUTE-DISTANCE
               IF CURRENT-DISTANCE-CALC < MIN-DISTANCE
                   MOVE CURRENT-DISTANCE-CALC TO MIN-DISTANCE
               END-IF
               EXIT.

           PERFORM VARYING J FROM I BY 1 UNTIL J > LOCATION-COUNT
               MOVE ROUTE-ARRAY(I) TO TEMP-INDEX
               MOVE ROUTE-ARRAY(J) TO ROUTE-ARRAY(I)
               MOVE TEMP-INDEX TO ROUTE-ARRAY(J)

               PERFORM PERMUTE-ROUTE (I + 1)

               MOVE ROUTE-ARRAY(I) TO TEMP-INDEX
               MOVE ROUTE-ARRAY(J) TO ROUTE-ARRAY(I)
               MOVE TEMP-INDEX TO ROUTE-ARRAY(J)
           END-PERFORM.

       CALCULATE-ROUTE-DISTANCE.
           MOVE 0 TO CURRENT-DISTANCE-CALC.
           PERFORM VARYING I FROM 1 BY 1 UNTIL I >= LOCATION-COUNT
               MOVE DISTANCE-COL(ROUTE-ARRAY(I) : ROUTE-ARRAY(I + 1)) TO TEMP-DISTANCE
               ADD TEMP-DISTANCE TO CURRENT-DISTANCE-CALC
           END-PERFORM.

       EOF CONDITION.
           READ INPUT-FILE NEXT.
           IF NOT END OF INPUT-FILE
               SET EOF TO FALSE
           ELSE
               SET EOF TO TRUE
           END-IF.
       END DECLARATIONS.
